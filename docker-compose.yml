version: '3.9'

services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '3000:3000'
    volumes:
      - ./client:/app
      - /app/node_modules
    stdin_open: true
    tty: true
    environment:
      - NODE_ENV=production
      - CHOKIDAR_USEPOLLING=true
    env_file:
      - ./client/.env
    networks:
      - webnet

  server:
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=production
    ports:
      - '5050:5050'
    volumes:
      - ./server:/app
      - /app/node_modules
    env_file:
      - ./server/.env
    networks:
      - webnet
    command: ["npx", "nodemon", "index.js"]

  db: 
    image: postgres:17-alpine
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: my1234
      POSTGRES_DB: sous_cook
    networks:
      - webnet

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin-container
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 80
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - db
    networks:
      - webnet

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - '80:80'
    depends_on:
      - client
      - server
    networks:
      - webnet

networks:
  webnet:

volumes:
  postgres_data:
  pgadmin_data: